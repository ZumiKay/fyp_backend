_ab3‍.x([["registerStudent",()=>registerStudent],["scanstudentID",()=>scanstudentID]]);const db = require('../model')
const cheerio = require('cheerio')
const axios = require('axios')
const bcrypt = require('bcrypt')

       const registerStudent = async (req , res) => {
    const {fullname ,studentID , email, dateofbirth, department, phone_number} = req.body
    const roles = await db.role.findAll()
    const data = {
        fullname: fullname , 
        studentID : studentID , 
        email :email, 
        date_of_birth:dateofbirth , 
        role_id: roles.find(({role}) => role === 'student').role_id,
        department:department , 
        phone_number:phone_number,
        password: ""
    }
    const randomgeneratepassword = (length) => {
        let result = ''
        const character = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?'

        for(let i = 0; i<length; i ++){
            result += character.charAt(Math.floor(Math.random() * character.length))
        }
        return result
    }
    const salt = await bcrypt.genSalt(10)
    const password = randomgeneratepassword(10)
    const hashedPassword = await bcrypt.hash(password , salt)
        data.password = hashedPassword
        db.student.create(data).then(result => {
            res.status(200).send({message: "Student Registered" , password: password})
        }).catch(err => {
            return res.status(500).send(err)
        })
        
    


}

       const scanstudentID = (req ,res) => {
    const {url} = req.body
    const name =[]
    fetch(url)
    .then(response => response.text())
    .then(data => {
        const $ = cheerio.load(data)
        
       $('.text-start',data).each(() =>{
            const span = $(this).text()
            const title = $(this).find('span').contents().text()
            name.push({
                span: span,
                title:title
            })
        })
        return res.status(200).send({
            name:name
        })
        
        
    }).catch(err => console.log(err))
   

}

